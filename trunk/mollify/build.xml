<project name="Mollify" default="compile">
	<property file="build.properties" />
	
	<property name="project.name" value="Mollify" />
	<property name="lib.dir" location="${root.dir}/lib" /> 
	<property name="build.dir" location="${root.dir}/build" />
	<property name="test.report.dir" location="${build.dir}/test" />
	<property name="src.dir" location="${root.dir}/src" />
	<property name="test.dir" location="${root.dir}/test" />
	<property name="public.module.name" value="org.sjarvela.Mollify" />
	<property name="deploy.package.name" value="mollify_${mollify.version}" />
	<property name="deploy.src.package.name" value="mollify-src_${mollify.version}" />
	
	<path id="compile.classpath">  
		<pathelement path="${java.class.path}/" />  
		<pathelement location="${gwt.sdk.location}/gwt-user.jar" />  
		<pathelement location="${gwt.sdk.location}/gwt-dev-mac.jar" />
		<pathelement location="${gwt.sdk.location}/gwt-dev-linux.jar" />
		<pathelement location="${src.dir}" />  
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>
		
	<target name="init">  
		<tstamp />
		<filter token="projectName" value="${project.name}" />
	</target>

	<target name="clean" description="Cleans the entire GWT build">
		<delete dir="${build.dir}" />
		<delete dir="${deploy.dir}" />
	</target>

	<target name="init-dev">
		<property name="gwt.style" value="DETAILED" />
		<property name="gwt.module" value="org.sjarvela.mollify.DevelopmentClient" />
	</target>

	<target name="init-deploy">
		<property name="gwt.style" value="OBF" />
		<property name="gwt.module" value="org.sjarvela.mollify.Client" />
	</target>
	
	<target name="do-compile" depends="init">
		<condition property="gwt.jvm.arg" value="-XstartOnFirstThread -Xmx512m" else="-Xmx512m -Xss1024k">
			<os name="Mac OS X"/>  
		</condition>  
		
		<echo>Platform: ${os.name}</echo>
		<mkdir dir="${build.dir}" />
		
		<java classpathref="compile.classpath" failonerror="true" classname="com.google.gwt.dev.Compiler" fork="true">
			<jvmarg line="${gwt.jvm.arg}" />
			<arg value="-war" />
			<arg value="${build.dir}" />
			<arg value="-logLevel" />
			<arg value="INFO" />
			<arg value="-localWorkers" />
			<arg value="6" />
			<arg value="-style" />
			<arg value="${gwt.style}" />		
			<arg value="${gwt.module}" />
		</java>
	</target>
	
	<target name="do-deploy" depends="init-deploy">
		<property name="target.dir" location="${deploy.dir}/temp" />
		
		<delete dir="${deploy.dir}" />
		<mkdir dir="${deploy.dir}" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${target.dir}/mollify" />
		
		<!-- 1. Binaries -->
		
		<!-- backend -->
		<copy todir="${target.dir}/mollify/backend">
			<fileset dir="${root.dir}/backend">
				<exclude name="configuration.php"/>
				<exclude name="index.html"/>
			</fileset>
		</copy>
		<copy file="${root.dir}/backend/example/example_host_page.html" tofile="${target.dir}/mollify/index.html"/>
		<copy file="${root.dir}/ReadMe.txt" todir="${target.dir}/mollify"/>

		<!-- client -->
		<copy todir="${target.dir}/mollify/client">
			<fileset dir="${build.dir}/${public.module.name}" />
		</copy>

		<zip destfile="${deploy.dir}/${deploy.package.name}.zip" basedir="${target.dir}"/>
		
		<delete dir="${target.dir}" />

		<!-- 2. Sources -->
		<property name="target.src.dir" location="${target.dir}/mollify-src" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${target.src.dir}/backend" />
		<mkdir dir="${target.src.dir}/client" />
		
		<copy todir="${target.src.dir}/backend">
			<fileset dir="${root.dir}/backend">
				<exclude name="configuration.php" />
				<exclude name="index.html" />
				<exclude name="**/.svn" />
			</fileset>
		</copy>
		<copy todir="${target.src.dir}/client">
			<fileset dir="${root.dir}">
				<exclude name="**/.svn" />
				<exclude name="backend/" />
				<exclude name="tomcat/" />
				<exclude name="war/" />
				<exclude name="www-test/" />
			</fileset>
		</copy>

		<zip destfile="${deploy.dir}/${deploy.src.package.name}.zip" basedir="${target.dir}" />

		<delete dir="${target.dir}" />
	</target>
		
	<target name="do-update">
		<property name="target.dir" location="${htdocs.root}/${public.module.name}" />
		
		<exec executable="rm" failonerror="false">
			<arg value="${target.dir}/themes" />
		</exec>
		<delete dir="${target.dir}" />
		<mkdir dir="${target.dir}" />
		
		<copy todir="${target.dir}">
			<fileset dir="${build.dir}/${public.module.name}">
			</fileset>
		</copy>
		
		<delete dir="${target.dir}/themes/" />

		<echo>Creating link from '${src.dir}/org/sjarvela/mollify/public/themes' to '${target.dir}'</echo>
		<exec executable="ln" failonerror="true">
			<arg value="-s" />
			<arg value="${src.dir}/org/sjarvela/mollify/public/themes" />
			<arg value="${target.dir}" />
		</exec>
	</target>
	
	<target name="test" depends="init-dev">
		<mkdir dir="${test.report.dir}" />
		
		<junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
			<jvmarg value="-Dgwt.args=-out www-test" />
 			<sysproperty key="basedir" value="${root.dir}" />
 			<formatter type="xml" />
 			<formatter usefile="false" type="plain" />
 			
			<classpath>
				<path refid="compile.classpath" />
				<pathelement path="src" />
				<pathelement path="test" />
				<pathelement path="${compile.dir}" />
			</classpath>
			
			<batchtest todir="${test.report.dir}">
				<fileset dir="test">
					<include name="**/**Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="compile" depends="init-dev, do-compile">
	</target>

	<target name="update" depends="init-dev, do-compile, do-update">
	</target>

	<target name="update-only" depends="init-dev, do-update">
	</target>
		
	<target name="deploy" depends="init-deploy, do-compile, do-deploy">
	</target>
</project>