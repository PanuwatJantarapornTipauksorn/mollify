#summary All available backend settings

Following settings are available in backend (and their default values):

{{{
$SETTINGS = array(
	"debug" => FALSE,						// debug mode
	"timezone" => NULL,						// server timezone
	"host_public_address" => NULL,					// host public address
	"email_login" => FALSE,						// allow email login
	"session_name" => NULL,						// Mollify session name
	"enable_limited_http_methods" => FALSE,				// limited HTTP methods
	"support_output_buffer" => FALSE,				// support for output buffer
	"mime_types" => array(),					// MIME types
	"enable_file_upload" => TRUE,					// enable file upload
	"enable_file_upload_progress" => FALSE,				// enable file upload progress
	"enable_folder_actions" => TRUE,				// enable folder actions
	"enable_change_password" => TRUE,				// enable change password
	"enable_descriptions" => FALSE,					// enable descriptions
	"enable_public_links" => FALSE,					// enable public links
	"enable_mail_notification" => FALSE,				// enable email notification
	"mail_notificator_class" => "mail/MailNotificator.class.php",	// mail notificator class
	"mail_notification_from" => "Admin",				// mail notification sender
	"enable_retrieve_url" => FALSE,					// enable URL retrieve
	"url_retriever_class" => "UrlRetriever.class.php",		// URL retriever implementation
	"enable_zip_download" => FALSE,					// enable zip downloads
	"zipper" => "ZipArchive",					// zip implementation
	"allowed_file_upload_types" => array(),				// allowed file upload types
	"new_folder_permission_mask" => 0755,				// new folder permission mask
	"convert_filenames" => FALSE,					// convert filesystem filenames
	"datetime_format" => "d.m.Y H:i:s",
	"authentication_methods" => array("pw"),
	"ldap_server" => NULL,
	"ldap_fqdn" => NULL,
	"upload_temp_dir" => NULL,
	"enable_thumbnails" => TRUE,
	"enable_folder_protection" => FALSE,				// enable folder protection
);
}}}

== Debug mode (`debug`) ==

Enables backend debug mode. This writes debug information to PHP error log and enables debug url, used for [Troubleshooting troubleshooting]. Possible values are TRUE and FALSE (default).

== Server timezone (`timezone`) ==

Server timezone, needed for PHP datetime functions. Without this information, some functions may fail. For values, see [http://php.net/manual/en/timezones.php]

== Host public address (`host_public_address`) ==

Public address to the server where Mollify is installed. If not given, Mollify uses the PHP variable HTTP_REFERER to determine this. Some servers don't provide this, and all requests will fail until given. The value is the URL for the site root including the protocol, for example "http://www.yoursite.com"

== Limited HTTP methods (`enable_limited_http_methods`) ==

Mollify uses REST API for client/server communication, which relies on all HTTP methods, ie. GET, PUT, POST and DELETE. Some servers don't support other methods than GET and POST, and in this case Mollify must be configured to use limited HTTP methods. Possible values are TRUE and FALSE (default).

== Support for output buffer (`support_output_buffer`) ==

If web server is configured to use output buffer, set this option to TRUE, and it will flush buffer on file downloads. See [http://www.php.net/manual/en/function.ob-flush.php]

== MIME types (`mime_types`) ==

File downloads may require special MIME type in order to be processed correctly. Mollify has predefined common MIME types, but this variable allows setting custom types.

Mime types are defined by the file extension, for example:

{{{
	$SETTINGS = array(
		"mime_types" => array("avi" => "video/divx", "wav" => "audio/x-wav")
	);
}}}

== Enable file upload (`enable_file_upload`) ==

By default, file uploads are enabled, but setting this to FALSE you can disable file uploads.

== Enable file upload progress (`enable_file_upload_progress`) ==

Basic HTTP file uploader can support file upload progress, if server has installed APC (Alternative PHP Cache), see [HowToEnableUploadProgressDisplay wiki page] for more information. By default, file upload progress is disabled.

*Note* Only for basic uploader

== Enable folder actions (`enable_folder_actions`) ==

By default, folder actions (copy, move, delete) are enabled, but setting this to FALSE you can disable folder actions.

== Enable change password (`enable_change_password`) ==

By default, changing password is enabled, but setting this to FALSE you can prevent users from changing passwords.

== Enable descriptions(`enable_descriptions`) ==

Enable file and folder descriptions (by default disabled).

== Enable public links (`enable_public_links`) ==

Enable public links, which allow downloading files without user account (by default disabled). When enabled, there will be a new option in the context popup actions menu for getting the link.

== Enable email notification (`enable_email_notification`) ==

Enable email notifications from any component or plugin (by default disabled). See also setting "Mail notificator class"

== Mail notificator class (`mail_notificator_class`) ==

Define the class responsible for sending the emails. This setting allows changing the default mail sender, for example, to match server requirements.

== Mail notification sender (`mail_notification_from`) ==

Define notification sender address (and optionally also name) used in mail notifications (for example "admin@yourhost.com", "Administrator <admin@yourhost.com>"). If no value is given (default), mail is sent with system default.

== Enable URL retrieve (`enable_url_retrieve`) ==

Enable url retrieve, which allows adding remote file directly to Mollify (by default disabled). See also setting "Mail notificator class"

== URL retriever class (`url_retriever_class`) ==

Define the URL retriever implementation. If default implementation is not sufficient, custom retriever can be defined with this setting.

== Enable zip downloads (`enable_zip_downloads`) ==

Enable zip downloads, which allows downloading entire folders or file collections (by default disabled).

== Zipper implementation (`zipper`) ==

Define the zipper implementation, possible values are "ZipArchive" (default), "Native" and "Raw". Option "ZipArchive" uses PHP zip library (ZipArchive), "Native" uses underlying OS functions (gzip, bzip, rar etc) and "Raw" uses pure PHP zip implementation.

== Folder permission mask (`new_folder_permission_mask`) ==

Define the OS permission mask for the folders created. By default mask 0755 is used (read+write+execute permissions for the user owner, and read+execute for group and other), but on some server configurations other mask might be required.

== Convert filesystem filenames (`convert_filenames`) ==

Mollify uses UTF-8 internally, and filesystems that support this charset work fine without any conversions. Some servers may operate on different charset, and then conversion is required. With value TRUE, Mollify will try to guess the conversion needed, otherwise the OS charset has to be defined here.

== Enable folder protection (`enable_folder_protection`) ==

Enable folder protection which prevents browser access to stored files. When enabled, htaccess file from "backend/include/apache" will be copied to the folder root.

* More setting descriptions coming soon *