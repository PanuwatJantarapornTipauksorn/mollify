#summary Frequently asked questions

= Frequently Asked Questions =

== 1. General ==

=== 1.1. How can I increase maximum file upload size? ===

Maximum file uload size is controlled by PHP, and can be changed in "php.ini" or ".htaccess" files. Settings involved are "`upload_max_filesize`", "`post_max_size`" and "`max_execution_time`". 

Php.ini controls global values, and usually are not editable in hosting services. Htaccess files are folder specific settings, where global settings can be overridden.

For example: 
{{{
php_value upload_max_filesize 10M 
php_value post_max_size 20M 
php_value max_execution_time 10000
}}}

These values define that each file can be 10 M in size, whereas total upload (all files combined) can be up to 20 M in size.

Max execution time is the time server allows any script to run before it is killed, and with very large files this might need increasing. Sometimes it is also necessary to define setting "memory_limit", which controls the amount of memory script can allocate.

=== 1.2. What are those cache files in installation package? ===

Although there are lots of files having "`cache`" in their name in the client folder, it doesn't mean they are result of some caching mechanism and therefore to be removed. On the contrary, they are the most important files in the package, the name simply indicates that they _can_ be cached by the web server if required.

These files represent the actual application, and each of these `*.cache` files are compiled to be optimal in certain environment, for example specific browser and language. There are lots of these files, but the entry point javascript will load only the one optimal for the current browser, language etc.

This is all taken care of the GWT compiler, more information how it works can be found from the GWT Developer Guide: http://code.google.com/webtoolkit/doc/latest/DevGuideCompilingAndDebugging.html (especially chapters "Understanding the GWT Compiler", "Application Files" and "Perfect Caching")

== 2. Errors ==

=== 2.1. Client error "Failed to get response from server" ===

	When this error occurs on the client, it is due to either of two things:

	a) *Client cannot connect to the server*

	b) *Client can connect to server, but server never responds*

	
	In both cases, it is always best to first check PHP error log, usually the reason can be found there.

	If there are no PHP error log entries, it is case of client cannot connect to server (ie. it tries to access backend interface files in a wrong place). If possible, you should check your web server access logs to see what resource it tries to access. Also check your backend interface file locations (see [http://code.google.com/p/mollify/wiki/Installation Installation wiki]), that it is set up properly.

	In such error cases, it may be useful to see client logs, see [http://code.google.com/p/mollify/wiki/ConfigurationAdditionalOptions configuration wiki] (chapter 6.2, Client Logging) for more information. [http://getfirebug.com/ Firebug] plugin for Firefox browser is also very good tool for investigating what resources a page tries to access.

	If, on the other hand, PHP log reveals errors, it is a case of invalid system setup or configuration.

	Common PHP errors and their reasons are:
  * `Call to undefined function:  json_encode()`: PHP version is lower than 5.2, and is not supported

=== 2.2. Nothing happens on zip download, or downloaded zip is unreadable ===

	When a file or a folder is downloaded as zip package and nothing happens or downloaded zip cannot be read, zip package processing fails. Check your PHP error log, and see [http://code.google.com/p/mollify/wiki/Installation Installation wiki] for more information about zip options.