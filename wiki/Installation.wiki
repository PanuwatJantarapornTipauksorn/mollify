#summary Installation instructions
#labels Phase-Deploy,Featured

= 1. Installation =

1) Untar package contents

		{{{tar -xzvf mollify_VER.tar.gz}}}

		This will extract two directories:
		  * "mollify": Application host page and backend service files
		  * "org.sjarvela.mollify.App": Client application files

2) Copy extracted directories into your web server root directory

3) Create configuration file "configuration.php" under directory "mollify", for further instructions see chapter 2.

4) Copy host page file ("example_index.html") from directory "Examples" into directory "mollify", and modify it according to your configuration. For other options, see chapter 3.

5) You are ready to go. Open address http://your.host.name/mollify to see your files.


= 2. Configuration =

	Mollify supports different kind of configuration options.
	
	From technical point of view, Mollify supports file based configuration, and database (MySQL) based configuration. File based configuration is configured manually, and is static. Database configuration, in other hand, can be configured from client.
	
	From functional point of view, Mollify supports single user configuration and multi user configuration. In single-user environment, no authentication is required and all access rules apply to everybody. In multi-user environment different user accounts are set up, where different users can have different published directories and different access permissions.
	
	Database configuration is always multi user configuration, where file based configuration can be set to either kind.
	
	To choose the configuration type, consider following:
	 * Single user configuration is valid only when you don't want to control or limit the way users access files.
	 * File based configuration is best for static environments, ie where users or published directories don't change often.
	 * Database configuration requires a bit more effort in installation, but allows configuration directly from Mollify client.
	
	Backend file "configuration.php" contains all configuration properties needed by Mollify, and contents depend on which type of configuration is chosen.	
	
	Follow instructions based on configuration type:
	 * [ConfigurationSingleUserMode Single-user mode]
	 * [ConfigurationMultiUserMode Multi-user mode (File based)]
	 * [ConfigurationMySql Multi-user mode (DB)]
	
	Example configuration files can be found from folder "example" in installation package.
	
	Also, see instructions on [ConfigurationAdditionalOptions additional configuration options].


= 3. Modifying Installation =

== 3.1. Relocating host page or backend interface files ==

	Host page can be located anywhere, the only thing that matters is that backend interface files (`*`.php) are located under the same directory or its subdirectories.

	If you wish to locate backend interface files (`*`.php) into a subdirectory, you must define this location in the host html file, with following format:

{{{
	<html>
		<head>
			...
			<meta name="mollify:property" content="service-path=[RELATIVE_PATH]">
		</head>
		...
	</html>
}}}

	Replace `[RELATIVE_PATH]` with path to the backend interface files, relative to the host file. Note that path can only descend, you cannot go upwards in the folder hierarchy, and thus all leading dots and slashes are removed ("." and "/").

	For example,
	if you place host file in `http://your_host_name/mollify.html` and the backend interface files into `http://your_host_name/mollify/scripts/`, the setting should be as follows:

{{{
	<meta name="mollify:property" content="service-path=mollify/scripts">
}}}

== 3.2. Relocating client application files ==

	Client application files can be located anywhere, only the javascript and theme css references in the host page
	must be updated to match the new location. While the location and the name of the folder "org.sjarvela.mollify.App" can be
	changed, do not alter its contents.

== 3.3. Customizing Mollify host page, or integrating Mollify into existing web page ==

	Host page structure can be freely modified, as long as following rules are met:
	  * Javascript file "org.sjarvela.mollify.App.nocache.js" must be linked
	  * In the page, there must be a div with id "mollify". Application is injected inside this element.