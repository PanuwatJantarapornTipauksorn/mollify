#summary Installation instructions
#labels Phase-Deploy,Featured

= 1. Installation =

	 #  Unzip Mollify installation package (for example with command "`unzip mollify_[VER].zip`")
	 #  Copy extracted directory "mollify" into your web server root directory (or any other place of your choice)
	 #  Open installer at address "http://your.host.name/mollify/backend/install/".
	 #  For database installation, open administration utility to configure users and published folders at "http://your.host.name/mollify/backend/admin/".

= 2. Upgrading =

	Upgrading Mollify requires following steps:

	 #  Log into Mollify as admin user, and leave the session open for the upgrade process
	 #  For backup, move or rename old installation directory "mollify" into different name or location
	 #  Copy directory "mollify" from the latest Mollify installation package
	 #  From backup, restore "configuration.php" into the new installation directory (as well as other customized files, such as "index.html")
	 #  Remove backup directory
	 #  Open update utility at address "http://your.host.name/mollify/backend/update/" to check if further update actions are required.

= 3. Configuration =

== 3.1. Configuration Types ==
	
	From technical point of view, Mollify supports file based configuration, and database (MySQL) based configuration. File based configuration is configured manually and is static. Database configuration, on the other hand, can be configured from client.
	
	From functional point of view, Mollify supports single user configuration and multi user configuration. In single user configuration, no authentication is required and all access rules apply to everybody. In multi user configuration different user accounts are set up, where different users can have different published directories and different access permissions.
	
	Database configuration is always multi user configuration, where file based configuration can be set to either kind.
	
	To choose the configuration type, consider following:
	 * Single user configuration is suitable only when you don't want to control or limit the way how different users access files.
	 * File based configuration is best for static environments, ie. where users or published directories don't change often.
	 * Database configuration requires a bit more effort in installation, but allows configuration directly from Mollify client.
	
	Backend file "configuration.php" contains all configuration properties needed by Mollify, and contents depend on which type of configuration is chosen.

== 3.2.	Steps ==

	 # Create "configuration.php" under directory "mollify/backend", examples can be found in folder "example" in installation package.
	 # Follow instructions based on configuration type:
		 * [ConfigurationSingleUserMode Single-user mode (File configuration)]
		 * [ConfigurationMultiUserMode Multi-user mode (File configuration)]
		 * [ConfigurationMySql Multi-user mode (Database configuration)]
	 # For additional options, see instructions on [ConfigurationAdditionalOptions additional configuration options].


= 4. Modifying Installation =

== 4.1. Relocating host page or backend interface files ==

	Host page can be located anywhere, the only thing that matters is that backend interface files (`*`.php) are located under the same directory or in its subdirectories.

	If you wish to locate backend interface files (`*`.php) into a subdirectory, you must define this location in the host html file, with following format:

{{{
	<html>
		<head>
			...
			<meta name="mollify:property" content="service-path=[RELATIVE_PATH]">
		</head>
		...
	</html>
}}}

	Replace `[RELATIVE_PATH]` with path to the backend interface files, relative to the host file. Note that path can only descend, you cannot go upwards in the folder hierarchy, and thus all leading dots and slashes are removed ("." and "/").

	For example,
	if you place host file in `http://your_host_name/mollify.html` and the backend interface files into `http://your_host_name/mollify/scripts/`, the setting should be as follows:

{{{
	<meta name="mollify:property" content="service-path=mollify/scripts">
}}}

== 4.2. Relocating client application files ==

	Client application files ("/mollify/client") can be located anywhere, only the javascript and theme css references in the host page
	must be updated to match the new location. While the location and the name of the client folder can be changed,
	do not alter its contents.

== 4.3. Customizing Mollify host page, or integrating Mollify into existing web page ==

	Host page structure can be freely modified, as long as following rules are met:
	  * Page must declare charset as UTF-8 with following: `<meta http-equiv="content-type" content="text/html; charset=UTF-8">`
	  * Javascript file "org.sjarvela.Mollify.nocache.js" must be linked
	  * In the page, there must be a div with id "mollify". Client application is injected inside this element.